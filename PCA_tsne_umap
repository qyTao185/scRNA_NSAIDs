sce_xx <- RunPCA(object = sce_xx, pc.genes = VariableFeatures(sce_xx))
# The following is just to show the different dimensionality reduction algorithms, not all of them need to be used onceã€‚
sce_xx1 <- RunPCA(sce_xx1)
sce_xx <- RunICA(sce_xx )
sce_xx <- RunTSNE(sce_xx )
sce_xx1 <- RunUMAP(sce_xx1,dims = 1:10)
#VizPCA( sce_xx, pcs.use = 1:2)
DimPlot(object = sce_xx, reduction = "pca") 
DimPlot(object = sce_xx, reduction = "ica")
DimPlot(object = sce_xx, reduction = "tsne")
DimPlot(object = sce_xx, reduction = "umap")
sce_xx <- RunUMAP(sce_xx,dims = 1:15)
#VizPCA( sce_xx, pcs.use = 1:2)
DimPlot(object = sce_xx, reduction = "umap")
pdf('newcelltpye.pdf')
DimPlot(object = sce_xx, reduction = "umap",
        group.by = "cell_types",
        label=TRUE,
        pt.size = 0.01,
        cols = colp)

colp=c("purple","red","mediumseagreen","orange3","lightslateblue","hotpink3")
dev.off()
colp=c("lightslateblue","red","mediumseagreen","orange3")

#Clustering was performed on the expression matrix after PCA dimension reduction FindNeighbors+FindClusters two steps
sce_xx <- FindNeighbors(object = sce_xx, dims = 1:21, verbose = FALSE) 




# Resolution parameters can be controlled during clustering to adjust the number of cell subsets.
sce_xx <- FindClusters(object = sce_xx,resolution =0.05)
DimPlot(object = sce_xx, reduction = "umap",
        group.by = 'cell_types',
        #label = TRUE,
        label.size = 14)
